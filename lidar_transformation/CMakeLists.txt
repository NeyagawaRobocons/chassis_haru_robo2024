cmake_minimum_required(VERSION 3.8)
project(lidar_transformation)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake_auto REQUIRED)
ament_auto_find_build_dependencies()

ament_auto_add_executable(laser_transformation src/laser_transformation.cpp)

# ament_auto_add_executable(lidar_executor src/lidar_executor.cpp)
# target_include_directories(lidar_executor PUBLIC
#   $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
#   # $<INSTALL_INTERFACE:include>
# )

# ament_target_dependencies(lidar_executor ldlidar)

install(TARGETS laser_transformation
  DESTINATION lib/${PROJECT_NAME})

# install(TARGETS lidar_executor
#   DESTINATION lib/${PROJECT_NAME})

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

ament_auto_package(
  INSTALL_TO_SHARE
  launch
  yaml
)
